{
  "version": 3,
  "sources": ["../../../server/ladders-challenges.ts"],
  "sourcesContent": ["import type {ChallengeType} from './room-battle';\r\n\r\n/**\r\n * A bundle of:\r\n - a ID\r\n * - a battle format\r\n * - a valid team for that format\r\n * - misc other preferences for the battle\r\n *\r\n * To start a battle, you need one of these for every player.\r\n */\r\nexport class BattleReady {\r\n\treadonly userid: ID;\r\n\treadonly formatid: string;\r\n\treadonly settings: User['battleSettings'];\r\n\treadonly rating: number;\r\n\treadonly challengeType: ChallengeType;\r\n\treadonly time: number;\r\n\tconstructor(\r\n\t\tuserid: ID,\r\n\t\tformatid: string,\r\n\t\tsettings: User['battleSettings'],\r\n\t\trating = 0,\r\n\t\tchallengeType: ChallengeType = 'challenge'\r\n\t) {\r\n\t\tthis.userid = userid;\r\n\t\tthis.formatid = formatid;\r\n\t\tthis.settings = settings;\r\n\t\tthis.rating = rating;\r\n\t\tthis.challengeType = challengeType;\r\n\t\tthis.time = Date.now();\r\n\t}\r\n}\r\n\r\nexport abstract class AbstractChallenge {\r\n\tfrom: ID;\r\n\tto: ID;\r\n\tready: BattleReady | null;\r\n\tformat: string;\r\n\tacceptCommand: string | null;\r\n\tmessage: string;\r\n\tacceptButton: string;\r\n\trejectButton: string;\r\n\troomid: RoomID;\r\n\tconstructor(from: ID, to: ID, ready: BattleReady | string, options: {\r\n\t\tacceptCommand?: string, rejectCommand?: string, roomid?: RoomID,\r\n\t\tmessage?: string, acceptButton?: string, rejectButton?: string,\r\n\t} = {}) {\r\n\t\tthis.from = from;\r\n\t\tthis.to = to;\r\n\t\tthis.ready = typeof ready === 'string' ? null : ready;\r\n\t\tthis.format = typeof ready === 'string' ? ready : ready.formatid;\r\n\t\tthis.acceptCommand = options.acceptCommand || null;\r\n\t\tthis.message = options.message || '';\r\n\t\tthis.roomid = options.roomid || '';\r\n\t\tthis.acceptButton = options.acceptButton || '';\r\n\t\tthis.rejectButton = options.rejectButton || '';\r\n\t}\r\n\tdestroy(accepted?: boolean) {}\r\n}\r\n/**\r\n * As a regular battle challenge, acceptCommand will be null, but you\r\n * can set acceptCommand to use this for custom requests wanting a\r\n * team for something.\r\n */\r\nexport class BattleChallenge extends AbstractChallenge {\r\n\tdeclare ready: BattleReady;\r\n\tdeclare acceptCommand: string | null;\r\n}\r\nexport class GameChallenge extends AbstractChallenge {\r\n\tdeclare ready: null;\r\n\tdeclare acceptCommand: string;\r\n}\r\n/**\r\n * Invites for `/importinputlog` (`ready: null`) or 4-player battles\r\n * (`ready: BattleReady`)\r\n */\r\nexport class BattleInvite extends AbstractChallenge {\r\n\tdeclare acceptCommand: string;\r\n\tdestroy(accepted?: boolean) {\r\n\t\tif (accepted) return;\r\n\r\n\t\tconst room = Rooms.get(this.roomid);\r\n\t\tif (!room) return; // room expired?\r\n\t\tconst battle = room.battle!;\r\n\t\tlet invitesFull = true;\r\n\t\tfor (const player of battle.players) {\r\n\t\t\tif (!player.invite && !player.id) invitesFull = false;\r\n\t\t\tif (player.invite === this.to) player.invite = '';\r\n\t\t}\r\n\t\tif (invitesFull) battle.sendInviteForm(true);\r\n\t}\r\n}\r\n\r\n/**\r\n * The defining difference between a BattleChallenge and a GameChallenge is\r\n * that a BattleChallenge has a Ready (and is for a RoomBattle format) and\r\n * a GameChallenge doesn't (and is for a RoomGame).\r\n *\r\n * But remember that both can have a custom acceptCommand.\r\n */\r\nexport type Challenge = BattleChallenge | GameChallenge;\r\n\r\n/**\r\n * Lists outgoing and incoming challenges for each user ID.\r\n */\r\nexport class Challenges extends Map<ID, Challenge[]> {\r\n\tgetOrCreate(userid: ID): Challenge[] {\r\n\t\tlet challenges = this.get(userid);\r\n\t\tif (challenges) return challenges;\r\n\t\tchallenges = [];\r\n\t\tthis.set(userid, challenges);\r\n\t\treturn challenges;\r\n\t}\r\n\t/** Throws Chat.ErrorMessage if a challenge between these users is already in the table */\r\n\tadd(challenge: Challenge): true {\r\n\t\tconst oldChallenge = this.search(challenge.to, challenge.from);\r\n\t\tif (oldChallenge) {\r\n\t\t\tthrow new Chat.ErrorMessage(`There is already a challenge (${challenge.format}) between ${challenge.to} and ${challenge.from}!`);\r\n\t\t}\r\n\t\tconst to = this.getOrCreate(challenge.to);\r\n\t\tconst from = this.getOrCreate(challenge.from);\r\n\t\tto.push(challenge);\r\n\t\tfrom.push(challenge);\r\n\t\tthis.update(challenge.to, challenge.from);\r\n\t\treturn true;\r\n\t}\r\n\t/** Returns false if the challenge isn't in the table */\r\n\tremove(challenge: Challenge, accepted?: boolean): boolean {\r\n\t\tconst to = this.getOrCreate(challenge.to);\r\n\t\tconst from = this.getOrCreate(challenge.from);\r\n\r\n\t\tconst toIndex = to.indexOf(challenge);\r\n\t\tlet success = false;\r\n\t\tif (toIndex >= 0) {\r\n\t\t\tto.splice(toIndex, 1);\r\n\t\t\tif (!to.length) this.delete(challenge.to);\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\r\n\t\tconst fromIndex = from.indexOf(challenge);\r\n\t\tif (fromIndex >= 0) {\r\n\t\t\tfrom.splice(fromIndex, 1);\r\n\t\t\tif (!from.length) this.delete(challenge.from);\r\n\t\t}\r\n\t\tif (success) {\r\n\t\t\tthis.update(challenge.to, challenge.from);\r\n\t\t\tchallenge.destroy(accepted);\r\n\t\t}\r\n\t\treturn success;\r\n\t}\r\n\tsearch(userid1: ID, userid2: ID): Challenge | null {\r\n\t\tconst challenges = this.get(userid1);\r\n\t\tif (!challenges) return null;\r\n\t\tfor (const challenge of challenges) {\r\n\t\t\tif (\r\n\t\t\t\t(challenge.to === userid1 && challenge.from === userid2) ||\r\n\t\t\t\t(challenge.to === userid2 && challenge.from === userid1)\r\n\t\t\t) {\r\n\t\t\t\treturn challenge;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tsearchByRoom(userid: ID, roomid: RoomID) {\r\n\t\tconst challenges = this.get(userid);\r\n\t\tif (!challenges) return null;\r\n\t\tfor (const challenge of challenges) {\r\n\t\t\tif (challenge.roomid === roomid) return challenge;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t/**\r\n\t * Try to accept a custom challenge, throwing `Chat.ErrorMessage` on failure,\r\n\t * and returning the user the challenge was from on a success.\r\n\t */\r\n\tresolveAcceptCommand(context: Chat.CommandContext) {\r\n\t\tconst targetid = context.target as ID;\r\n\t\tconst chall = this.search(context.user.id, targetid);\r\n\t\tif (!chall || chall.to !== context.user.id || chall.acceptCommand !== context.message) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Challenge not found. You are using the wrong command. Challenges should be accepted with /accept`);\r\n\t\t}\r\n\t\treturn chall;\r\n\t}\r\n\taccept(context: Chat.CommandContext) {\r\n\t\tconst chall = this.resolveAcceptCommand(context);\r\n\t\tthis.remove(chall, true);\r\n\t\tconst fromUser = Users.get(chall.from);\r\n\t\tif (!fromUser) throw new Chat.ErrorMessage(`User \"${chall.from}\" is not available right now.`);\r\n\t\treturn fromUser;\r\n\t}\r\n\tclearFor(userid: ID, reason?: string): number {\r\n\t\tconst user = Users.get(userid);\r\n\t\tconst userIdentity = user ? user.getIdentity() : ` ${userid}`;\r\n\t\tconst challenges = this.get(userid);\r\n\t\tif (!challenges) return 0;\r\n\t\tfor (const challenge of challenges) {\r\n\t\t\tconst otherid = challenge.to === userid ? challenge.from : challenge.to;\r\n\t\t\tconst otherUser = Users.get(otherid);\r\n\t\t\tconst otherIdentity = otherUser ? otherUser.getIdentity() : ` ${otherid}`;\r\n\r\n\t\t\tconst otherChallenges = this.get(otherid)!;\r\n\t\t\tconst otherIndex = otherChallenges.indexOf(challenge);\r\n\t\t\tif (otherIndex >= 0) otherChallenges.splice(otherIndex, 1);\r\n\t\t\tif (otherChallenges.length === 0) this.delete(otherid);\r\n\r\n\t\t\tif (!user && !otherUser) continue;\r\n\t\t\tconst header = `|pm|${userIdentity}|${otherIdentity}|`;\r\n\t\t\tlet message = `${header}/challenge`;\r\n\t\t\tif (reason) message = `${header}/text Challenge cancelled because ${reason}.\\n${message}`;\r\n\t\t\tuser?.send(message);\r\n\t\t\totherUser?.send(message);\r\n\t\t}\r\n\t\tthis.delete(userid);\r\n\t\treturn challenges.length;\r\n\t}\r\n\tgetUpdate(challenge: Challenge | null) {\r\n\t\tif (!challenge) return `/challenge`;\r\n\t\tconst teambuilderFormat = challenge.ready ? challenge.ready.formatid : '';\r\n\t\treturn `/challenge ${challenge.format}|${teambuilderFormat}|${challenge.message}|${challenge.acceptButton}|${challenge.rejectButton}`;\r\n\t}\r\n\tupdate(userid1: ID, userid2: ID) {\r\n\t\tconst challenge = this.search(userid1, userid2);\r\n\t\tuserid1 = challenge ? challenge.from : userid1;\r\n\t\tuserid2 = challenge ? challenge.to : userid2;\r\n\t\tthis.send(userid1, userid2, this.getUpdate(challenge));\r\n\t}\r\n\tsend(userid1: ID, userid2: ID, message: string) {\r\n\t\tconst user1 = Users.get(userid1);\r\n\t\tconst user2 = Users.get(userid2);\r\n\t\tconst user1Identity = user1 ? user1.getIdentity() : ` ${userid1}`;\r\n\t\tconst user2Identity = user2 ? user2.getIdentity() : ` ${userid2}`;\r\n\t\tconst fullMessage = `|pm|${user1Identity}|${user2Identity}|${message}`;\r\n\t\tuser1?.send(fullMessage);\r\n\t\tuser2?.send(fullMessage);\r\n\t}\r\n\tupdateFor(connection: Connection | User) {\r\n\t\tconst user = connection.user;\r\n\t\tconst challenges = this.get(user.id);\r\n\t\tif (!challenges) return;\r\n\r\n\t\tconst userIdentity = user.getIdentity();\r\n\t\tlet messages = '';\r\n\t\tfor (const challenge of challenges) {\r\n\t\t\tlet fromIdentity, toIdentity;\r\n\t\t\tif (challenge.from === user.id) {\r\n\t\t\t\tfromIdentity = userIdentity;\r\n\t\t\t\tconst toUser = Users.get(challenge.to);\r\n\t\t\t\ttoIdentity = toUser ? toUser.getIdentity() : ` ${challenge.to}`;\r\n\t\t\t} else {\r\n\t\t\t\tconst fromUser = Users.get(challenge.from);\r\n\t\t\t\tfromIdentity = fromUser ? fromUser.getIdentity() : ` ${challenge.from}`;\r\n\t\t\t\ttoIdentity = userIdentity;\r\n\t\t\t}\r\n\t\t\tmessages += `|pm|${fromIdentity}|${toIdentity}|${this.getUpdate(challenge)}\\n`;\r\n\t\t}\r\n\t\tconnection.send(messages);\r\n\t}\r\n}\r\n\r\nexport const challenges = new Challenges();\r\n"],
  "mappings": "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",
  "names": ["challenges"]
}
