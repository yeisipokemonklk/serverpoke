{
  "version": 3,
  "sources": ["../../../../server/chat-plugins/uno.ts"],
  "sourcesContent": ["/**\r\n * UNO\r\n * Pokemon Showdown - http://pokemonshowdown.com/\r\n *\r\n * This plugin allows rooms to run games of scripted UNO\r\n *\r\n * @license MIT license\r\n */\r\nimport {Utils} from '../../lib';\r\n\r\ntype Color = 'Green' | 'Yellow' | 'Red' | 'Blue' | 'Black';\r\ninterface Card {\r\n\tvalue: string;\r\n\tcolor: Color;\r\n\tchangedColor?: Color;\r\n\tname: string;\r\n}\r\n\r\nconst MAX_TIME = 60; // seconds\r\n\r\nconst rgbGradients: {[k in Color]: string} = {\r\n\tGreen: \"rgba(0, 122, 0, 1), rgba(0, 185, 0, 0.9)\",\r\n\tYellow: \"rgba(255, 225, 0, 1), rgba(255, 255, 85, 0.9)\",\r\n\tBlue: \"rgba(40, 40, 255, 1), rgba(125, 125, 255, 0.9)\",\r\n\tRed: \"rgba(255, 0, 0, 1), rgba(255, 125, 125, 0.9)\",\r\n\tBlack: \"rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.55)\",\r\n};\r\n\r\nconst textColors: {[k in Color]: string} = {\r\n\tGreen: \"rgb(0, 128, 0)\",\r\n\tYellow: \"rgb(175, 165, 40)\",\r\n\tBlue: \"rgb(75, 75, 255)\",\r\n\tRed: \"rgb(255, 0, 0)\",\r\n\tBlack: 'inherit',\r\n};\r\n\r\nconst textShadow = 'text-shadow: 1px 0px black, -1px 0px black, 0px -1px black, 0px 1px black, 2px -2px black;';\r\n\r\nfunction cardHTML(card: Card, fullsize: boolean) {\r\n\tlet surface = card.value.replace(/[^A-Z0-9+]/g, \"\");\r\n\tconst background = rgbGradients[card.color];\r\n\tif (surface === 'R') surface = '<i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>';\r\n\r\n\treturn `<button class=\"button\" style=\"font-size: 14px; font-weight: bold; color: white; ${textShadow} padding-bottom: 117px; text-align: left; height: 135px; width: ${fullsize ? '72' : '37'}px; border-radius: 10px 2px 2px 3px; color: white; background: ${card.color}; background: -webkit-linear-gradient(${background}); background: -o-linear-gradient(${background}); background: -moz-linear-gradient(${background}); background: linear-gradient(${background})\" name=send value=\"/uno play ${card.name}\" aria-label=\"${card.name}\">${surface}</button>`;\r\n}\r\n\r\nfunction createDeck() {\r\n\tconst colors: Color[] = ['Red', 'Blue', 'Green', 'Yellow'];\r\n\tconst values = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'Reverse', 'Skip', '+2'];\r\n\r\n\tconst basic: Card[] = [];\r\n\r\n\tfor (const color of colors) {\r\n\t\tbasic.push(...values.map(v => {\r\n\t\t\tconst c: Card = {value: v, color: color, name: `${color} ${v}`};\r\n\t\t\treturn c;\r\n\t\t}));\r\n\t}\r\n\r\n\treturn [\r\n\t\t// two copies of the basic stuff (total 96)\r\n\t\t...basic,\r\n\t\t...basic,\r\n\t\t// The four 0s\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: colors[v], value: '0', name: `${colors[v]} 0`};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t\t // Wild cards\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: 'Black', value: 'Wild', name: 'Wild'};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t\t// Wild +4 cards\r\n\t\t...[0, 1, 2, 3].map(v => {\r\n\t\t\tconst c: Card = {color: 'Black', value: '+4', name: 'Wild +4'};\r\n\t\t\treturn c;\r\n\t\t}),\r\n\t]; // 108 cards\r\n}\r\n\r\nexport class UNO extends Rooms.RoomGame<UNOPlayer> {\r\n\toverride readonly gameid = 'uno' as ID;\r\n\toverride title = 'UNO';\r\n\toverride readonly allowRenames = true;\r\n\toverride timer: NodeJS.Timer | null = null;\r\n\tmaxTime = MAX_TIME;\r\n\tautostartTimer: NodeJS.Timer | null = null;\r\n\tstate: 'signups' | 'color' | 'play' | 'uno' = 'signups';\r\n\tcurrentPlayer: UNOPlayer | null = null;\r\n\tdeck: Card[] = Utils.shuffle(createDeck());\r\n\tdiscards: Card[] = [];\r\n\ttopCard: Card | null = null;\r\n\tawaitUnoPlayer: UNOPlayer | null = null;\r\n\tunoId: ID | null = null;\r\n\tdirection: 1 | -1 = 1;\r\n\tsuppressMessages: boolean;\r\n\tspectators: {[k: string]: number} = Object.create(null);\r\n\tisPlusFour = false;\r\n\tgameNumber: number;\r\n\r\n\tconstructor(room: Room, cap: number, suppressMessages: boolean) {\r\n\t\tsuper(room);\r\n\r\n\t\tthis.gameNumber = room.nextGameNumber();\r\n\t\tthis.playerCap = cap;\r\n\t\tthis.suppressMessages = suppressMessages || false;\r\n\r\n\t\tthis.sendToRoom(`|uhtml|uno-${this.gameNumber}|<div class=\"broadcast-blue\"><p style=\"font-size: 14pt; text-align: center\">A new game of <strong>UNO</strong> is starting!</p><p style=\"font-size: 9pt; text-align: center\"><button class=\"button\" name=\"send\" value=\"/uno join\"><strong>Join and play</strong></button> <button class=\"button\" name=\"send\" value=\"/uno spectate\">Watch</button></p>${this.suppressMessages ? `<p style=\"font-size: 6pt; text-align: center\">Game messages won't show up unless you're playing or watching.</p>` : ''}</div>`, true);\r\n\t}\r\n\r\n\toverride onUpdateConnection() {}\r\n\r\n\toverride onConnect(user: User, connection: Connection) {\r\n\t\tif (this.state === 'signups') {\r\n\t\t\tconnection.sendTo(\r\n\t\t\t\tthis.room,\r\n\t\t\t\t`|uhtml|uno-${this.gameNumber}|<div class=\"broadcast-blue\">` +\r\n\t\t\t\t`<p style=\"font-size: 14pt; text-align: center\">A new game of <strong>UNO</strong> is starting!</p>` +\r\n\t\t\t\t`<p style=\"font-size: 9pt; text-align: center\"><button class=\"button\" name=\"send\" value=\"/uno join\"><strong>Join and play</strong></button> ` +\r\n\t\t\t\t`<button class=\"button\" name=\"send\" value=\"/uno spectate\">Watch</button></p>` +\r\n\t\t\t\t`${this.suppressMessages ?\r\n\t\t\t\t\t`<p style=\"font-size: 6pt; text-align: center\">Game messages won't show up unless you're playing or watching.` : ''}</div>`\r\n\t\t\t);\r\n\t\t} else if (this.onSendHand(user) === false) {\r\n\t\t\tconnection.sendTo(\r\n\t\t\t\tthis.room,\r\n\t\t\t\t`|uhtml|uno-${this.gameNumber}|<div class=\"infobox\"><p>A game of UNO is currently in progress.<button class=\"button\" name=\"send\" value=\"/uno spectate\">Spectate Game</button></p>` +\r\n\t\t\t\t`${this.suppressMessages ? `<p style=\"font-size: 6pt\">Game messages won't show up unless you're playing or watching.` : ''}</div>`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tonStart(isAutostart?: boolean) {\r\n\t\tif (this.playerCount < 2) {\r\n\t\t\tif (isAutostart) {\r\n\t\t\t\tthis.room.add(\"The game of UNO was forcibly ended because there aren't enough users.\");\r\n\t\t\t\tthis.destroy();\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"There must be at least 2 players to start a game of UNO.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.autostartTimer) clearTimeout(this.autostartTimer);\r\n\t\tthis.sendToRoom(`|uhtmlchange|uno-${this.gameNumber}|<div class=\"infobox\"><p>The game of UNO has started. <button class=\"button\" name=\"send\" value=\"/uno spectate\">Spectate Game</button></p>${this.suppressMessages ? `<p style=\"font-size: 6pt\">Game messages won't show up unless you're playing or watching.` : ''}</div>`, true);\r\n\t\tthis.state = 'play';\r\n\r\n\t\tthis.onNextPlayer(); // determines the first player\r\n\r\n\t\t// give cards to the players\r\n\t\tfor (const player of this.players) {\r\n\t\t\tplayer.hand.push(...this.drawCard(7));\r\n\t\t}\r\n\r\n\t\t// top card of the deck.\r\n\t\tdo {\r\n\t\t\tthis.topCard = this.drawCard(1)[0];\r\n\t\t\tthis.discards.unshift(this.topCard);\r\n\t\t} while (this.topCard.color === 'Black');\r\n\r\n\t\tthis.sendToRoom(`|raw|The top card is <span style=\"font-weight:bold;color: ${textColors[this.topCard.color]}\">${this.topCard.name}</span>.`);\r\n\r\n\t\tthis.onRunEffect(this.topCard.value, true);\r\n\t\tthis.nextTurn(true);\r\n\t}\r\n\r\n\toverride joinGame(user: User) {\r\n\t\tif (user.id in this.playerTable) {\r\n\t\t\tthrow new Chat.ErrorMessage(\"You have already joined the game of UNO.\");\r\n\t\t}\r\n\t\tif (this.state === 'signups' && this.addPlayer(user)) {\r\n\t\t\tthis.sendToRoom(`${user.name} has joined the game of UNO.`);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\toverride leaveGame(user: User) {\r\n\t\tif (!(user.id in this.playerTable)) return false;\r\n\t\tconst player = this.playerTable[user.id];\r\n\t\tif ((this.state === 'signups' && this.removePlayer(player)) || this.eliminate(user.id)) {\r\n\t\t\tthis.sendToRoom(`${user.name} has left the game of UNO.`);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Overwrite the default makePlayer so it makes an UNOPlayer instead.\r\n\t */\r\n\tmakePlayer(user: User) {\r\n\t\treturn new UNOPlayer(user, this);\r\n\t}\r\n\r\n\toverride onRename(user: User, oldUserid: ID, isJoining: boolean, isForceRenamed: boolean) {\r\n\t\tif (!(oldUserid in this.playerTable) || user.id === oldUserid) return false;\r\n\t\tif (!user.named && !isForceRenamed) {\r\n\t\t\tuser.games.delete(this.roomid);\r\n\t\t\tuser.updateSearch();\r\n\t\t\treturn; // dont set users to their guest accounts.\r\n\t\t}\r\n\t\tthis.renamePlayer(user, oldUserid);\r\n\t}\r\n\r\n\teliminate(userid: ID | undefined) {\r\n\t\tif (!userid) return null;\r\n\t\tconst player = this.playerTable[userid];\r\n\t\tif (!player) return false;\r\n\r\n\t\tconst name = player.name;\r\n\r\n\t\tif (this.playerCount === 2) {\r\n\t\t\tthis.removePlayer(player);\r\n\t\t\tthis.onWin(this.players[0]);\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\t// handle current player...\r\n\t\tconst removingCurrentPlayer = player === this.currentPlayer;\r\n\t\tif (removingCurrentPlayer) {\r\n\t\t\tif (this.state === 'color') {\r\n\t\t\t\tif (!this.topCard) {\r\n\t\t\t\t\t// should never happen\r\n\t\t\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.topCard.changedColor = this.discards[1].changedColor || this.discards[1].color;\r\n\t\t\t\tthis.sendToRoom(`|raw|${Utils.escapeHTML(name)} has not picked a color, the color will stay as <span style=\"color: ${textColors[this.topCard.changedColor]}\">${this.topCard.changedColor}</span>.`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.awaitUnoPlayer === player) this.awaitUnoPlayer = null;\r\n\t\tif (!this.topCard) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Unable to disqualify ${name}.`);\r\n\t\t}\r\n\r\n\t\t// put that player's cards into the discard pile to prevent cards from being permanently lost\r\n\t\tthis.discards.push(...player.hand);\r\n\r\n\t\tif (removingCurrentPlayer) {\r\n\t\t\tthis.onNextPlayer();\r\n\t\t}\r\n\t\tthis.removePlayer(player);\r\n\t\tif (removingCurrentPlayer) {\r\n\t\t\tthis.nextTurn(true);\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n\r\n\tsendToRoom(msg: string, overrideSuppress = false) {\r\n\t\tif (!this.suppressMessages || overrideSuppress) {\r\n\t\t\tthis.room.add(msg).update();\r\n\t\t} else {\r\n\t\t\t// send to the players first\r\n\t\t\tfor (const player of this.players) {\r\n\t\t\t\tplayer.sendRoom(msg);\r\n\t\t\t}\r\n\r\n\t\t\t// send to spectators\r\n\t\t\tfor (const i in this.spectators) {\r\n\t\t\t\tif (i in this.playerTable) continue; // don't double send to users already in the game.\r\n\t\t\t\tconst user = Users.getExact(i);\r\n\t\t\t\tif (user) user.sendTo(this.roomid, msg);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetPlayers(showCards?: boolean): string {\r\n\t\tlet playerList = this.players;\r\n\t\tif (this.direction === -1) playerList = [...playerList].reverse();\r\n\r\n\t\tif (!showCards) {\r\n\t\t\treturn playerList.map(p => Utils.escapeHTML(p.name)).join(', ');\r\n\t\t}\r\n\t\tlet buf = `<ol style=\"padding-left:0;\">`;\r\n\t\tfor (const player of playerList) {\r\n\t\t\tbuf += `<li${this.currentPlayer === player ? ` style=\"font-weight:bold;\"` : ''}>`;\r\n\t\t\tbuf += `${Utils.escapeHTML(player.name)} (${player.hand.length})`;\r\n\t\t\tbuf += `</li>`;\r\n\t\t}\r\n\t\tbuf += `</ol>`;\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tonAwaitUno() {\r\n\t\treturn new Promise<void>(resolve => {\r\n\t\t\tif (!this.awaitUnoPlayer) return resolve();\r\n\r\n\t\t\tthis.state = \"uno\";\r\n\t\t\t// the throttle for sending messages is at 600ms for non-authed users,\r\n\t\t\t// wait 750ms before sending the next person's turn.\r\n\t\t\t// this allows games to be fairer, so the next player would not spam the pass command blindly\r\n\t\t\t// to force the player to draw 2 cards.\r\n\t\t\t// this also makes games with uno bots not always turn in the bot's favour.\r\n\t\t\t// without a delayed turn, 3 bots playing will always result in a endless game\r\n\t\t\tsetTimeout(() => resolve(), 750);\r\n\t\t});\r\n\t}\r\n\r\n\tnextTurn(starting?: boolean) {\r\n\t\tvoid this.onAwaitUno().then(() => {\r\n\t\t\tif (!starting) this.onNextPlayer();\r\n\r\n\t\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\t\tconst player = this.currentPlayer!;\r\n\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${player.name}'s turn.`);\r\n\t\t\tthis.state = 'play';\r\n\t\t\tif (player.cardLock) player.cardLock = null;\r\n\t\t\tplayer.sendDisplay();\r\n\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${player.name} has been automatically disqualified.`);\r\n\t\t\t\tthis.eliminate(player.id);\r\n\t\t\t}, this.maxTime * 1000);\r\n\t\t});\r\n\t}\r\n\r\n\tonNextPlayer() {\r\n\t\tthis.currentPlayer = this.getNextPlayer();\r\n\t}\r\n\r\n\tgetNextPlayer() {\r\n\t\t// if none is set\r\n\t\tthis.currentPlayer ||= this.players[Math.floor(this.playerCount * Math.random())];\r\n\r\n\t\tlet player = this.players[this.players.indexOf(this.currentPlayer) + this.direction];\r\n\t\t// wraparound\r\n\t\tplayer ||= (this.direction === 1 ? this.players[0] : this.players[this.playerCount - 1]);\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\tonDraw(player: UNOPlayer) {\r\n\t\tif (this.currentPlayer !== player || this.state !== 'play') return false;\r\n\t\tif (player.cardLock) return true;\r\n\r\n\t\tthis.onCheckUno();\r\n\r\n\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${player.name} has drawn a card.`);\r\n\r\n\t\tconst card = this.onDrawCard(player, 1);\r\n\t\tplayer.sendDisplay();\r\n\t\tplayer.cardLock = card[0].name;\r\n\t}\r\n\r\n\tonPlay(player: UNOPlayer, cardName: string) {\r\n\t\tif (this.currentPlayer !== player || this.state !== 'play') return false;\r\n\r\n\t\tconst card = player.hasCard(cardName);\r\n\t\tif (!card) return \"You do not have that card.\";\r\n\r\n\t\t// check for legal play\r\n\t\tif (!this.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tif (player.cardLock && player.cardLock !== cardName) return `You can only play ${player.cardLock} after drawing.`;\r\n\t\tif (\r\n\t\t\tcard.color !== 'Black' &&\r\n\t\t\tcard.color !== (this.topCard.changedColor || this.topCard.color) &&\r\n\t\t\tcard.value !== this.topCard.value\r\n\t\t) {\r\n\t\t\treturn `You cannot play this card; you can only play: Wild cards, ${this.topCard.changedColor ? 'and' : ''} ${this.topCard.changedColor || this.topCard.color} cards${this.topCard.changedColor ? \"\" : ` and cards with the digit ${this.topCard.value}`}.`;\r\n\t\t}\r\n\t\tif (card.value === '+4' && !player.canPlayWildFour()) {\r\n\t\t\treturn \"You cannot play Wild +4 when you still have a card with the same color as the top card.\";\r\n\t\t}\r\n\r\n\t\tif (this.timer) clearTimeout(this.timer); // reset the autodq timer.\r\n\r\n\t\tthis.onCheckUno();\r\n\r\n\t\t// update the game information.\r\n\t\tthis.topCard = card;\r\n\t\tplayer.removeCard(cardName);\r\n\t\tthis.discards.unshift(card);\r\n\r\n\t\t// update the unoId here, so when the display is sent to the player when the play is made\r\n\t\tif (player.hand.length === 1) {\r\n\t\t\tthis.awaitUnoPlayer = player;\r\n\t\t\tthis.unoId = Math.floor(Math.random() * 100).toString() as ID;\r\n\t\t}\r\n\r\n\t\tplayer.sendDisplay(); // update display without the card in it for purposes such as choosing colors\r\n\r\n\t\tthis.sendToRoom(`|raw|${Utils.escapeHTML(player.name)} has played a <span style=\"font-weight:bold;color: ${textColors[card.color]}\">${card.name}</span>.`);\r\n\r\n\t\t// handle hand size\r\n\t\tif (!player.hand.length) {\r\n\t\t\tthis.onWin(player);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// continue with effects and next player\r\n\t\tthis.onRunEffect(card.value);\r\n\t\tif (this.state === 'play') this.nextTurn();\r\n\t}\r\n\r\n\tonRunEffect(value: string, initialize?: boolean) {\r\n\t\tconst colorDisplay = `|uhtml|uno-color|<table style=\"width: 100%; border: 1px solid black\"><tr><td style=\"width: 50%\"><button style=\"width: 100%; background-color: red; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Red\">Red</button></td><td style=\"width: 50%\"><button style=\"width: 100%; background-color: blue; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; color: white; padding: 5px\" name=send value=\"/uno color Blue\">Blue</button></td></tr><tr><td style=\"width: 50%\"><button style=\"width: 100%; background-color: green; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Green\">Green</button></td><td style=\"width: 50%\"><button style=\"width: 100%; background-color: yellow; border: 2px solid rgba(0 , 0 , 0 , 0.59); border-radius: 5px; padding: 5px\" name=send value=\"/uno color Yellow\">Yellow</button></td></tr></table>`;\r\n\r\n\t\tswitch (value) {\r\n\t\tcase 'Reverse':\r\n\t\t\tthis.direction *= -1;\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|The direction of the game has changed.`);\r\n\t\t\t// in 2 player games, reverse sends the turn back to the player.\r\n\t\t\tif (!initialize && this.playerCount === 2) this.onNextPlayer();\r\n\t\t\tbreak;\r\n\t\tcase 'Skip':\r\n\t\t\tthis.onNextPlayer();\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${this.currentPlayer!.name}'s turn has been skipped.`);\r\n\t\t\tbreak;\r\n\t\tcase '+2':\r\n\t\t\tthis.onNextPlayer();\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${this.currentPlayer!.name} has been forced to draw 2 cards.`);\r\n\t\t\tthis.onDrawCard(this.currentPlayer!, 2);\r\n\t\t\tbreak;\r\n\t\tcase '+4':\r\n\t\t\tthis.currentPlayer!.sendRoom(colorDisplay);\r\n\t\t\tthis.state = 'color';\r\n\t\t\t// apply to the next in line, since the current player still has to choose the color\r\n\t\t\tconst next = this.getNextPlayer();\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${next.name} has been forced to draw 4 cards.`);\r\n\t\t\tthis.onDrawCard(next, 4);\r\n\t\t\tthis.isPlusFour = true;\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${this.currentPlayer!.name} has been automatically disqualified.`);\r\n\t\t\t\tthis.eliminate(this.currentPlayer!.id);\r\n\t\t\t}, this.maxTime * 1000);\r\n\t\t\tbreak;\r\n\t\tcase 'Wild':\r\n\t\t\tthis.currentPlayer!.sendRoom(colorDisplay);\r\n\t\t\tthis.state = 'color';\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${this.currentPlayer!.name} has been automatically disqualified.`);\r\n\t\t\t\tthis.eliminate(this.currentPlayer!.id);\r\n\t\t\t}, this.maxTime * 1000);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (initialize) this.onNextPlayer();\r\n\t}\r\n\r\n\tonSelectColor(player: UNOPlayer, color: Color) {\r\n\t\tif (\r\n\t\t\t!['Red', 'Blue', 'Green', 'Yellow'].includes(color) ||\r\n\t\t\tplayer !== this.currentPlayer ||\r\n\t\t\tthis.state !== 'color'\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tthis.topCard.changedColor = color;\r\n\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|The color has been changed to ${color}.`);\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\r\n\t\t// remove color change menu and send the display of their cards again\r\n\t\tplayer.sendRoom(\"|uhtmlchange|uno-color|\");\r\n\t\tplayer.sendDisplay();\r\n\r\n\t\tif (this.isPlusFour) {\r\n\t\t\tthis.isPlusFour = false;\r\n\t\t\tthis.onNextPlayer(); // handle the skipping here.\r\n\t\t}\r\n\r\n\t\tthis.nextTurn();\r\n\t}\r\n\r\n\tonDrawCard(player: UNOPlayer, count: number) {\r\n\t\tif (typeof count === 'string') count = parseInt(count);\r\n\t\tif (!count || isNaN(count) || count < 1) count = 1;\r\n\t\tconst drawnCards = this.drawCard(count);\r\n\r\n\t\tplayer.hand.push(...drawnCards);\r\n\t\tplayer.sendRoom(\r\n\t\t\t`|raw|You have drawn the following card${Chat.plural(drawnCards)}: ` +\r\n\t\t\t`${drawnCards.map(card => `<span style=\"color: ${textColors[card.color]}\">${card.name}</span>`).join(', ')}.`\r\n\t\t);\r\n\t\treturn drawnCards;\r\n\t}\r\n\r\n\tdrawCard(count: number) {\r\n\t\tif (typeof count === 'string') count = parseInt(count);\r\n\t\tif (!count || isNaN(count) || count < 1) count = 1;\r\n\t\tconst drawnCards: Card[] = [];\r\n\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\tif (!this.deck.length) {\r\n\t\t\t\t// shuffle the cards back into the deck, or if there are no discards, add another deck into the game.\r\n\t\t\t\tthis.deck = this.discards.length ? Utils.shuffle(this.discards) : Utils.shuffle(createDeck());\r\n\t\t\t\tthis.discards = []; // clear discard pile\r\n\t\t\t}\r\n\t\t\tdrawnCards.push(this.deck[this.deck.length - 1]);\r\n\t\t\tthis.deck.pop();\r\n\t\t}\r\n\t\treturn drawnCards;\r\n\t}\r\n\r\n\tonUno(player: UNOPlayer, unoId: ID) {\r\n\t\t// uno id makes spamming /uno uno impossible\r\n\t\tif (this.unoId !== unoId || player !== this.awaitUnoPlayer) return false;\r\n\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|**UNO!** ${player.name} is down to their last card!`);\r\n\t\tthis.awaitUnoPlayer = null;\r\n\t\tthis.unoId = null;\r\n\t}\r\n\r\n\tonCheckUno() {\r\n\t\tif (!this.awaitUnoPlayer) return;\r\n\t\t// if the previous player hasn't hit UNO before the next player plays something, they are forced to draw 2 cards;\r\n\t\tif (this.awaitUnoPlayer !== this.currentPlayer) {\r\n\t\t\tthis.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${this.awaitUnoPlayer.name} forgot to say UNO! and is forced to draw 2 cards.`);\r\n\t\t\tthis.onDrawCard(this.awaitUnoPlayer, 2);\r\n\t\t}\r\n\t\tthis.awaitUnoPlayer = null;\r\n\t\tthis.unoId = null;\r\n\t}\r\n\r\n\tonSendHand(user: User) {\r\n\t\tif (this.state === 'signups') return false;\r\n\r\n\t\tthis.playerTable[user.id]?.sendDisplay();\r\n\t}\r\n\r\n\tonWin(player: UNOPlayer) {\r\n\t\tthis.sendToRoom(\r\n\t\t\tUtils.html`|raw|<div class=\"broadcast-blue\">Congratulations to ${player.name} for winning the game of UNO!</div>`,\r\n\t\t\ttrue\r\n\t\t);\r\n\t\tthis.destroy();\r\n\t}\r\n\r\n\toverride destroy() {\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\t\tif (this.autostartTimer) clearTimeout(this.autostartTimer);\r\n\t\tthis.sendToRoom(`|uhtmlchange|uno-${this.gameNumber}|<div class=\"infobox\">The game of UNO has ended.</div>`, true);\r\n\r\n\t\tthis.setEnded();\r\n\t\tfor (const player of this.players) player.destroy();\r\n\t\tthis.room.game = null;\r\n\t}\r\n}\r\n\r\nclass UNOPlayer extends Rooms.RoomGamePlayer<UNO> {\r\n\thand: Card[];\r\n\tcardLock: string | null;\r\n\r\n\tconstructor(user: User, game: UNO) {\r\n\t\tsuper(user, game);\r\n\t\tthis.hand = [];\r\n\t\tthis.cardLock = null;\r\n\t}\r\n\r\n\tcanPlayWildFour() {\r\n\t\tif (!this.game.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tconst color = (this.game.topCard.changedColor || this.game.topCard.color);\r\n\r\n\t\tif (this.hand.some(c => c.color === color)) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\thasCard(cardName: string) {\r\n\t\treturn this.hand.find(card => card.name === cardName);\r\n\t}\r\n\r\n\tremoveCard(cardName: string) {\r\n\t\tfor (const [i, card] of this.hand.entries()) {\r\n\t\t\tif (card.name === cardName) {\r\n\t\t\t\tthis.hand.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbuildHand() {\r\n\t\treturn Utils.sortBy(this.hand, card => [card.color, card.value])\r\n\t\t\t.map((card, i) => cardHTML(card, i === this.hand.length - 1));\r\n\t}\r\n\r\n\tsendDisplay() {\r\n\t\tconst hand = this.buildHand().join('');\r\n\t\tconst players = `<p><strong>Players (${this.game.playerCount}):</strong></p> ${this.game.getPlayers(true)}`;\r\n\t\tconst draw = '<button class=\"button\" style=\"width: 45%; background: rgba(0, 0, 255, 0.05)\" name=send value=\"/uno draw\">Draw a card!</button>';\r\n\t\tconst pass = '<button class=\"button\" style=\" width: 45%; background: rgba(255, 0, 0, 0.05)\" name=send value=\"/uno pass\">Pass!</button>';\r\n\t\tconst uno = `<button class=\"button\" style=\" width: 90%; background: rgba(0, 255, 0, 0.05); height: 60px; margin-top: 2px;\" name=send value=\"/uno uno ${this.game.unoId || '0'}\">UNO!</button>`;\r\n\r\n\t\tif (!this.game.topCard) {\r\n\t\t\t// should never happen\r\n\t\t\tthrow new Error(`No top card in the discard pile.`);\r\n\t\t}\r\n\t\tconst top = `<strong>Top Card: <span style=\"color: ${textColors[this.game.topCard.changedColor || this.game.topCard.color]}\">${this.game.topCard.name}</span></strong>`;\r\n\r\n\t\t// clear previous display and show new display\r\n\t\tthis.sendRoom(\"|uhtmlchange|uno-hand|\");\r\n\t\tthis.sendRoom(\r\n\t\t\t`|uhtml|uno-hand|<div style=\"border: 1px solid skyblue; padding: 0 0 5px 0\"><table style=\"width: 100%; table-layout: fixed; border-radius: 3px\"><tr><td colspan=\"4\" rowspan=\"2\" style=\"padding: 5px\"><div style=\"overflow-x: auto; white-space: nowrap; width: 100%\">${hand}</div></td>${this.game.currentPlayer === this ? `<td colspan=\"2\" style=\"padding: 5px 5px 0 5px\">${top}</td></tr>` : \"\"}` +\r\n\t\t\t`<tr><td colspan=\"2\" style=\"vertical-align: top; padding: 0px 5px 5px 5px\"><div style=\"overflow-y: scroll\">${players}</div></td></tr></table>` +\r\n\t\t\t`${this.game.currentPlayer === this ? `<div style=\"text-align: center\">${draw}${pass}<br />${uno}</div>` : \"\"}</div>`\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const commands: Chat.ChatCommands = {\r\n\tuno: {\r\n\t\t// roomowner commands\r\n\t\toff: 'disable',\r\n\t\tdisable(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('gamemanagement', null, room);\r\n\t\t\tif (room.settings.unoDisabled) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"UNO is already disabled in this room.\");\r\n\t\t\t}\r\n\t\t\troom.settings.unoDisabled = true;\r\n\t\t\troom.saveSettings();\r\n\t\t\treturn this.sendReply(\"UNO has been disabled for this room.\");\r\n\t\t},\r\n\r\n\t\ton: 'enable',\r\n\t\tenable(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('gamemanagement', null, room);\r\n\t\t\tif (!room.settings.unoDisabled) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"UNO is already enabled in this room.\");\r\n\t\t\t}\r\n\t\t\tdelete room.settings.unoDisabled;\r\n\t\t\troom.saveSettings();\r\n\t\t\treturn this.sendReply(\"UNO has been enabled for this room.\");\r\n\t\t},\r\n\r\n\t\t// moderation commands\r\n\t\tnew: 'create',\r\n\t\tmake: 'create',\r\n\t\tcreatepublic: 'create',\r\n\t\tmakepublic: 'create',\r\n\t\tcreateprivate: 'create',\r\n\t\tmakeprivate: 'create',\r\n\t\tcreate(target, room, user, connection, cmd) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tif (room.settings.unoDisabled) throw new Chat.ErrorMessage(\"UNO is currently disabled for this room.\");\r\n\t\t\tif (room.game) throw new Chat.ErrorMessage(\"There is already a game in progress in this room.\");\r\n\r\n\t\t\tconst suppressMessages = cmd.includes('private') || !(cmd.includes('public') || room.roomid === 'gamecorner');\r\n\r\n\t\t\tlet cap = parseInt(target);\r\n\t\t\tif (isNaN(cap)) cap = 12;\r\n\t\t\tif (cap < 2) cap = 2;\r\n\t\t\troom.game = new UNO(room, cap, suppressMessages);\r\n\t\t\tthis.privateModAction(`A game of UNO was created by ${user.name}.`);\r\n\t\t\tthis.modlog('UNO CREATE');\r\n\t\t},\r\n\r\n\t\tcap: 'setcap',\r\n\t\tsetcap(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (game.state !== 'signups') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`There is no UNO game in the signups phase in this room, so adjusting the player cap would do nothing.`);\r\n\t\t\t}\r\n\t\t\tlet cap = parseInt(target);\r\n\t\t\tif (isNaN(cap) || cap < 2) {\r\n\t\t\t\tcap = 2;\r\n\t\t\t}\r\n\t\t\tgame.playerCap = cap;\r\n\t\t\tthis.privateModAction(`The playercap was set to ${game.playerCap} by ${user.name}.`);\r\n\t\t\tthis.modlog('UNO PLAYERCAP');\r\n\t\t},\r\n\r\n\t\tstart(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (game.state !== 'signups') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"There is no UNO game in signups phase in this room.\");\r\n\t\t\t}\r\n\t\t\tgame.onStart();\r\n\t\t\tthis.privateModAction(`The game of UNO was started by ${user.name}.`);\r\n\t\t\tthis.modlog('UNO START');\r\n\t\t},\r\n\r\n\t\tstop: 'end',\r\n\t\tend(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tif (!room.game || room.game.gameid !== 'uno') {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"There is no UNO game going on in this room.\");\r\n\t\t\t}\r\n\t\t\troom.game.destroy();\r\n\t\t\troom.add(\"The game of UNO was forcibly ended.\").update();\r\n\t\t\tthis.privateModAction(`The game of UNO was ended by ${user.name}.`);\r\n\t\t\tthis.modlog('UNO END');\r\n\t\t},\r\n\r\n\t\tautodq: 'timer',\r\n\t\ttimer(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tconst amount = parseInt(target);\r\n\t\t\tif (!amount || amount < 5 || amount > 300) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"The amount must be a number between 5 and 300.\");\r\n\t\t\t}\r\n\r\n\t\t\tgame.maxTime = amount;\r\n\t\t\tif (game.timer) clearTimeout(game.timer);\r\n\t\t\tgame.timer = setTimeout(() => {\r\n\t\t\t\tgame.eliminate(game.currentPlayer?.id);\r\n\t\t\t}, amount * 1000);\r\n\t\t\tthis.addModAction(`${user.name} has set the UNO automatic disqualification timer to ${amount} seconds.`);\r\n\t\t\tthis.modlog('UNO TIMER', null, `${amount} seconds`);\r\n\t\t},\r\n\r\n\t\tautostart(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (toID(target) === 'off') {\r\n\t\t\t\tif (!game.autostartTimer) throw new Chat.ErrorMessage(\"There is no autostart timer running on.\");\r\n\t\t\t\tthis.addModAction(`${user.name} has turned off the UNO autostart timer.`);\r\n\t\t\t\tclearTimeout(game.autostartTimer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst amount = parseInt(target);\r\n\t\t\tif (!amount || amount < 30 || amount > 600) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(\"The amount must be a number between 30 and 600 seconds.\");\r\n\t\t\t}\r\n\t\t\tif (game.state !== 'signups') throw new Chat.ErrorMessage(\"The game of UNO has already started.\");\r\n\t\t\tif (game.autostartTimer) clearTimeout(game.autostartTimer);\r\n\t\t\tgame.autostartTimer = setTimeout(() => {\r\n\t\t\t\tgame.onStart(true);\r\n\t\t\t}, amount * 1000);\r\n\t\t\tthis.addModAction(`${user.name} has set the UNO autostart timer to ${amount} seconds.`);\r\n\t\t},\r\n\r\n\t\tdq: 'disqualify',\r\n\t\tdisqualify(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\r\n\t\t\tconst disqualified = game.eliminate(toID(target));\r\n\t\t\tif (disqualified === false) throw new Chat.ErrorMessage(`Unable to disqualify ${target}.`);\r\n\t\t\tthis.privateModAction(`${user.name} has disqualified ${disqualified} from the UNO game.`);\r\n\t\t\tthis.modlog('UNO DQ', toID(target));\r\n\t\t\troom.add(`${disqualified} has been disqualified from the UNO game.`).update();\r\n\t\t},\r\n\r\n\t\t// player/user commands\r\n\t\tj: 'join',\r\n\t\tjoin(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tthis.checkChat();\r\n\t\t\tif (!game.joinGame(user)) throw new Chat.ErrorMessage(\"Unable to join the game.\");\r\n\r\n\t\t\treturn this.sendReply(\"You have joined the game of UNO.\");\r\n\t\t},\r\n\r\n\t\tl: 'leave',\r\n\t\tleave(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!game.leaveGame(user)) throw new Chat.ErrorMessage(\"Unable to leave the game.\");\r\n\t\t\treturn this.sendReply(\"You have left the game of UNO.\");\r\n\t\t},\r\n\r\n\t\tplay(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!game) throw new Chat.ErrorMessage(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tconst player: UNOPlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) throw new Chat.ErrorMessage(`You are not in the game of UNO.`);\r\n\t\t\tconst error = game.onPlay(player, target);\r\n\t\t\tif (typeof error === 'string') throw new Chat.ErrorMessage(error);\r\n\t\t},\r\n\r\n\t\tdraw(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tconst game = room.getGame(UNO);\r\n\t\t\tif (!game) throw new Chat.ErrorMessage(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tconst player: UNOPlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) throw new Chat.ErrorMessage(`You are not in the game of UNO.`);\r\n\t\t\tconst error = game.onDraw(player);\r\n\t\t\tif (error) throw new Chat.ErrorMessage(\"You have already drawn a card this turn.\");\r\n\t\t},\r\n\r\n\t\tpass(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!game) throw new Chat.ErrorMessage(\"There is no UNO game going on in this room right now.\");\r\n\t\t\tconst player: UNOPlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) throw new Chat.ErrorMessage(`You are not in the game of UNO.`);\r\n\t\t\tif (game.currentPlayer !== player) throw new Chat.ErrorMessage(\"It is currently not your turn.\");\r\n\t\t\tif (!player.cardLock) throw new Chat.ErrorMessage(\"You cannot pass until you draw a card.\");\r\n\t\t\tif (game.state === 'color') throw new Chat.ErrorMessage(\"You cannot pass until you choose a color.\");\r\n\r\n\t\t\tgame.sendToRoom(`|c:|${Math.floor(Date.now() / 1000)}|&|${user.name} has passed.`);\r\n\t\t\tgame.nextTurn();\r\n\t\t},\r\n\r\n\t\tcolor(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tconst player: UNOPlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) throw new Chat.ErrorMessage(`You are not in the game of UNO.`);\r\n\t\t\tlet color: Color;\r\n\t\t\tif (target === 'Red' || target === 'Green' || target === 'Blue' || target === 'Yellow' || target === 'Black') {\r\n\t\t\t\tcolor = target;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`\"${target}\" is not a valid color.`);\r\n\t\t\t}\r\n\t\t\tgame.onSelectColor(player, color);\r\n\t\t},\r\n\r\n\t\tuno(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tconst player: UNOPlayer | undefined = game.playerTable[user.id];\r\n\t\t\tif (!player) throw new Chat.ErrorMessage(`You are not in the game of UNO.`);\r\n\t\t\tgame.onUno(player, toID(target));\r\n\t\t},\r\n\r\n\t\t// information commands\r\n\t\t'': 'hand',\r\n\t\thand(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tgame.onSendHand(user);\r\n\t\t},\r\n\r\n\t\t'c': 'cards',\r\n\t\tcards(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\t\t\tconst players = `<strong>Players (${game.playerCount}):</strong></p>${game.getPlayers(true)}`;\r\n\t\t\tthis.sendReplyBox(`<tr><td colspan=\"2\" style=\"vertical-align: top; padding: 0px 5px 5px 5px\"><div style=\"overflow-y: scroll\">${players}</div></td></tr></table>`);\r\n\t\t},\r\n\r\n\t\tplayers: 'getusers',\r\n\t\tusers: 'getusers',\r\n\t\tgetplayers: 'getusers',\r\n\t\tgetusers(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!this.runBroadcast()) return false;\r\n\t\t\tthis.sendReplyBox(`<strong>Players (${game.playerCount})</strong>:${game.getPlayers()}`);\r\n\t\t},\r\n\r\n\t\thelp(target, room, user) {\r\n\t\t\tthis.parse('/help uno');\r\n\t\t},\r\n\r\n\t\t// suppression commands\r\n\t\tsuppress(target, room, user) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tthis.checkCan('minigame', null, room);\r\n\r\n\t\t\ttarget = toID(target);\r\n\t\t\tconst state = target === 'on' ? true : target === 'off' ? false : undefined;\r\n\r\n\t\t\tif (state === undefined) {\r\n\t\t\t\treturn this.sendReply(`Suppression of UNO game messages is currently ${game.suppressMessages ? 'on' : 'off'}.`);\r\n\t\t\t}\r\n\t\t\tif (state === game.suppressMessages) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`Suppression of UNO game messages is already ${game.suppressMessages ? 'on' : 'off'}.`);\r\n\t\t\t}\r\n\r\n\t\t\tgame.suppressMessages = state;\r\n\r\n\t\t\tthis.addModAction(`${user.name} has turned ${state ? 'on' : 'off'} suppression of UNO game messages.`);\r\n\t\t\tthis.modlog('UNO SUPRESS', null, (state ? 'ON' : 'OFF'));\r\n\t\t},\r\n\r\n\t\tspectate(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!game) throw new Chat.ErrorMessage(\"There is no UNO game going on in this room right now.\");\r\n\r\n\t\t\tif (!game.suppressMessages) throw new Chat.ErrorMessage(\"The current UNO game is not suppressing messages.\");\r\n\t\t\tif (user.id in game.spectators) throw new Chat.ErrorMessage(\"You are already spectating this game.\");\r\n\r\n\t\t\tgame.spectators[user.id] = 1;\r\n\t\t\tthis.sendReply(\"You are now spectating this private UNO game.\");\r\n\t\t},\r\n\r\n\t\tunspectate(target, room, user) {\r\n\t\t\tconst game = this.requireGame(UNO);\r\n\t\t\tif (!game) throw new Chat.ErrorMessage(\"There is no UNO game going on in this room right now.\");\r\n\r\n\t\t\tif (!game.suppressMessages) throw new Chat.ErrorMessage(\"The current UNO game is not suppressing messages.\");\r\n\t\t\tif (!(user.id in game.spectators)) throw new Chat.ErrorMessage(\"You are currently not spectating this game.\");\r\n\r\n\t\t\tdelete game.spectators[user.id];\r\n\t\t\tthis.sendReply(\"You are no longer spectating this private UNO game.\");\r\n\t\t},\r\n\t},\r\n\r\n\tunohelp: [\r\n\t\t`/uno create [player cap] - creates a new UNO game with an optional player cap (default player cap at 12). Use the command [createpublic] to force a public game or [createprivate] to force a private game. Requires: % @ # &`,\r\n\t\t`/uno setcap [player cap] - adjusts the player cap of the current UNO game. Requires: % @ # &`,\r\n\t\t`/uno timer [amount] - sets an auto disqualification timer for [amount] seconds. Requires: % @ # &`,\r\n\t\t`/uno autostart [amount] - sets an auto starting timer for [amount] seconds. Requires: % @ # &`,\r\n\t\t`/uno end - ends the current game of UNO. Requires: % @ # &`,\r\n\t\t`/uno start - starts the current game of UNO. Requires: % @ # &`,\r\n\t\t`/uno disqualify [player] - disqualifies the player from the game. Requires: % @ # &`,\r\n\t\t`/uno hand - displays your own hand.`,\r\n\t\t`/uno cards - displays the number of cards for each player.`,\r\n\t\t`/uno getusers - displays the players still in the game.`,\r\n\t\t`/uno [spectate|unspectate] - spectate / unspectate the current private UNO game.`,\r\n\t\t`/uno suppress [on|off] - Toggles suppression of game messages.`,\r\n\t],\r\n};\r\n\r\nexport const roomSettings: Chat.SettingsHandler = room => ({\r\n\tlabel: \"UNO\",\r\n\tpermission: 'editroom',\r\n\toptions: [\r\n\t\t[`disabled`, room.settings.unoDisabled || 'uno disable'],\r\n\t\t[`enabled`, !room.settings.unoDisabled || 'uno enable'],\r\n\t],\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
