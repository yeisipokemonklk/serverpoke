{
  "version": 3,
  "sources": ["../../../sim/field.ts"],
  "sourcesContent": ["/**\r\n * Simulator Field\r\n * Pokemon Showdown - http://pokemonshowdown.com/\r\n *\r\n * @license MIT\r\n */\r\n\r\nimport {State} from './state';\r\nimport {EffectState} from './pokemon';\r\nimport {toID} from './dex';\r\n\r\nexport class Field {\r\n\treadonly battle: Battle;\r\n\treadonly id: ID;\r\n\r\n\tweather: ID;\r\n\tweatherState: EffectState;\r\n\tterrain: ID;\r\n\tterrainState: EffectState;\r\n\tpseudoWeather: {[id: string]: EffectState};\r\n\r\n\tconstructor(battle: Battle) {\r\n\t\tthis.battle = battle;\r\n\t\tconst fieldScripts = this.battle.format.field || this.battle.dex.data.Scripts.field;\r\n\t\tif (fieldScripts) Object.assign(this, fieldScripts);\r\n\t\tthis.id = '';\r\n\r\n\t\tthis.weather = '';\r\n\t\tthis.weatherState = {id: ''};\r\n\t\tthis.terrain = '';\r\n\t\tthis.terrainState = {id: ''};\r\n\t\tthis.pseudoWeather = {};\r\n\t}\r\n\r\n\ttoJSON(): AnyObject {\r\n\t\treturn State.serializeField(this);\r\n\t}\r\n\r\n\tsetWeather(status: string | Condition, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null) {\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\tif (!sourceEffect && this.battle.effect) sourceEffect = this.battle.effect;\r\n\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\r\n\t\tif (this.weather === status.id) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\tif (this.battle.gen > 5 || this.weatherState.duration === 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.battle.gen > 2 || status.id === 'sandstorm') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (source) {\r\n\t\t\tconst result = this.battle.runEvent('SetWeather', source, source, status);\r\n\t\t\tif (!result) {\r\n\t\t\t\tif (result === false) {\r\n\t\t\t\t\tif ((sourceEffect as Move)?.weather) {\r\n\t\t\t\t\t\tthis.battle.add('-fail', source, sourceEffect, '[from] ' + this.weather);\r\n\t\t\t\t\t} else if (sourceEffect && sourceEffect.effectType === 'Ability') {\r\n\t\t\t\t\t\tthis.battle.add('-ability', source, sourceEffect, '[from] ' + this.weather, '[fail]');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst prevWeather = this.weather;\r\n\t\tconst prevWeatherState = this.weatherState;\r\n\t\tthis.weather = status.id;\r\n\t\tthis.weatherState = {id: status.id};\r\n\t\tif (source) {\r\n\t\t\tthis.weatherState.source = source;\r\n\t\t\tthis.weatherState.sourceSlot = source.getSlot();\r\n\t\t}\r\n\t\tif (status.duration) {\r\n\t\t\tthis.weatherState.duration = status.duration;\r\n\t\t}\r\n\t\tif (status.durationCallback) {\r\n\t\t\tif (!source) throw new Error(`setting weather without a source`);\r\n\t\t\tthis.weatherState.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t}\r\n\t\tif (!this.battle.singleEvent('FieldStart', status, this.weatherState, this, source, sourceEffect)) {\r\n\t\t\tthis.weather = prevWeather;\r\n\t\t\tthis.weatherState = prevWeatherState;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.battle.eachEvent('WeatherChange', sourceEffect);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tclearWeather() {\r\n\t\tif (!this.weather) return false;\r\n\t\tconst prevWeather = this.getWeather();\r\n\t\tthis.battle.singleEvent('FieldEnd', prevWeather, this.weatherState, this);\r\n\t\tthis.weather = '';\r\n\t\tthis.weatherState = {id: ''};\r\n\t\tthis.battle.eachEvent('WeatherChange');\r\n\t\treturn true;\r\n\t}\r\n\r\n\teffectiveWeather() {\r\n\t\tif (this.suppressingWeather()) return '';\r\n\t\treturn this.weather;\r\n\t}\r\n\r\n\tsuppressingWeather() {\r\n\t\tfor (const side of this.battle.sides) {\r\n\t\t\tfor (const pokemon of side.active) {\r\n\t\t\t\tif (pokemon && !pokemon.fainted && !pokemon.ignoringAbility() && pokemon.getAbility().suppressWeather) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tisWeather(weather: string | string[]) {\r\n\t\tconst ourWeather = this.effectiveWeather();\r\n\t\tif (!Array.isArray(weather)) {\r\n\t\t\treturn ourWeather === toID(weather);\r\n\t\t}\r\n\t\treturn weather.map(toID).includes(ourWeather);\r\n\t}\r\n\r\n\tgetWeather() {\r\n\t\treturn this.battle.dex.conditions.getByID(this.weather);\r\n\t}\r\n\r\n\tsetTerrain(status: string | Effect, source: Pokemon | 'debug' | null = null, sourceEffect: Effect | null = null) {\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\tif (!sourceEffect && this.battle.effect) sourceEffect = this.battle.effect;\r\n\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\t\tif (!source) throw new Error(`setting terrain without a source`);\r\n\r\n\t\tif (this.terrain === status.id) return false;\r\n\t\tconst prevTerrain = this.terrain;\r\n\t\tconst prevTerrainState = this.terrainState;\r\n\t\tthis.terrain = status.id;\r\n\t\tthis.terrainState = {\r\n\t\t\tid: status.id,\r\n\t\t\tsource,\r\n\t\t\tsourceSlot: source.getSlot(),\r\n\t\t\tduration: status.duration,\r\n\t\t};\r\n\t\tif (status.durationCallback) {\r\n\t\t\tthis.terrainState.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t}\r\n\t\tif (!this.battle.singleEvent('FieldStart', status, this.terrainState, this, source, sourceEffect)) {\r\n\t\t\tthis.terrain = prevTerrain;\r\n\t\t\tthis.terrainState = prevTerrainState;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.battle.eachEvent('TerrainChange', sourceEffect);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tclearTerrain() {\r\n\t\tif (!this.terrain) return false;\r\n\t\tconst prevTerrain = this.getTerrain();\r\n\t\tthis.battle.singleEvent('FieldEnd', prevTerrain, this.terrainState, this);\r\n\t\tthis.terrain = '';\r\n\t\tthis.terrainState = {id: ''};\r\n\t\tthis.battle.eachEvent('TerrainChange');\r\n\t\treturn true;\r\n\t}\r\n\r\n\teffectiveTerrain(target?: Pokemon | Side | Battle) {\r\n\t\tif (this.battle.event && !target) target = this.battle.event.target;\r\n\t\treturn this.battle.runEvent('TryTerrain', target) ? this.terrain : '';\r\n\t}\r\n\r\n\tisTerrain(terrain: string | string[], target?: Pokemon | Side | Battle) {\r\n\t\tconst ourTerrain = this.effectiveTerrain(target);\r\n\t\tif (!Array.isArray(terrain)) {\r\n\t\t\treturn ourTerrain === toID(terrain);\r\n\t\t}\r\n\t\treturn terrain.map(toID).includes(ourTerrain);\r\n\t}\r\n\r\n\tgetTerrain() {\r\n\t\treturn this.battle.dex.conditions.getByID(this.terrain);\r\n\t}\r\n\r\n\taddPseudoWeather(\r\n\t\tstatus: string | Condition,\r\n\t\tsource: Pokemon | 'debug' | null = null,\r\n\t\tsourceEffect: Effect | null = null\r\n\t): boolean {\r\n\t\tif (!source && this.battle.event && this.battle.event.target) source = this.battle.event.target;\r\n\t\tif (source === 'debug') source = this.battle.sides[0].active[0];\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\r\n\t\tlet state = this.pseudoWeather[status.id];\r\n\t\tif (state) {\r\n\t\t\tif (!(status as any).onFieldRestart) return false;\r\n\t\t\treturn this.battle.singleEvent('FieldRestart', status, state, this, source, sourceEffect);\r\n\t\t}\r\n\t\tstate = this.pseudoWeather[status.id] = {\r\n\t\t\tid: status.id,\r\n\t\t\tsource,\r\n\t\t\tsourceSlot: source?.getSlot(),\r\n\t\t\tduration: status.duration,\r\n\t\t};\r\n\t\tif (status.durationCallback) {\r\n\t\t\tif (!source) throw new Error(`setting fieldcond without a source`);\r\n\t\t\tstate.duration = status.durationCallback.call(this.battle, source, source, sourceEffect);\r\n\t\t}\r\n\t\tif (!this.battle.singleEvent('FieldStart', status, state, this, source, sourceEffect)) {\r\n\t\t\tdelete this.pseudoWeather[status.id];\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.battle.runEvent('PseudoWeatherChange', source, source, status);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetPseudoWeather(status: string | Effect) {\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\treturn this.pseudoWeather[status.id] ? status : null;\r\n\t}\r\n\r\n\tremovePseudoWeather(status: string | Effect) {\r\n\t\tstatus = this.battle.dex.conditions.get(status);\r\n\t\tconst state = this.pseudoWeather[status.id];\r\n\t\tif (!state) return false;\r\n\t\tthis.battle.singleEvent('FieldEnd', status, state, this);\r\n\t\tdelete this.pseudoWeather[status.id];\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\t// deallocate ourself\r\n\r\n\t\t// get rid of some possibly-circular references\r\n\t\t(this as any).battle = null!;\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
