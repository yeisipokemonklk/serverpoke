{
  "version": 3,
  "sources": ["../../../data/cg-team-data.ts"],
  "sourcesContent": ["// Data for computer-generated teams\r\n\r\nexport const MOVE_PAIRINGS: {[moveID: string]: string} = {\r\n\trest: 'sleeptalk',\r\n\tsleeptalk: 'rest',\r\n};\r\n\r\n// Bonuses to move ratings by ability\r\nexport const ABILITY_MOVE_BONUSES: {[abilityID: string]: {[moveID: string]: number}} = {\r\n\tdrought: {sunnyday: 0.2, solarbeam: 2},\r\n\tcontrary: {terablast: 2},\r\n};\r\n// Bonuses to move ratings by move type\r\nexport const ABILITY_MOVE_TYPE_BONUSES: {[abilityID: string]: {[typeID: string]: number}} = {\r\n\tdarkaura: {Dark: 1.33},\r\n\tdragonsmaw: {Dragon: 1.5},\r\n\tfairyaura: {Fairy: 1.33},\r\n\tsteelworker: {Steel: 1.5},\r\n\tsteelyspirit: {Steel: 1.5},\r\n\ttransistor: {Electric: 1.3},\r\n\r\n\t// -ate moves\r\n\tpixilate: {Normal: 1.5 * 1.2},\r\n\trefrigerate: {Normal: 1.5 * 1.2},\r\n\taerilate: {Normal: 1.5 * 1.2},\r\n\tnormalize: {Normal: 1.2},\r\n\r\n\t// weather\r\n\tdrizzle: {Water: 1.4, Fire: 0.6},\r\n\tdrought: {Fire: 1.4, Water: 0.6},\r\n};\r\n// For moves whose quality isn't obvious from data\r\n// USE SPARINGLY!\r\nexport const HARDCODED_MOVE_WEIGHTS: {[moveID: string]: number} = {\r\n\t// Fails unless user is asleep\r\n\tsnore: 0,\r\n\t// Hard to use\r\n\tlastresort: 0.1, dreameater: 0.1,\r\n\t// Useless without Berry + sucks even then\r\n\tbelch: 0.2,\r\n\r\n\t// Power increases in conditions out of our control that may occur\r\n\tavalanche: 1.2,\r\n\tficklebeam: 1.3,\r\n\thex: 1.2,\r\n\tstompingtantrum: 1.2,\r\n\ttemperflare: 1.2,\r\n\r\n\t// screens\r\n\tlightscreen: 3, reflect: 3, auroraveil: 3, // TODO: make sure AVeil always gets Snow?\r\n\ttailwind: 2,\r\n\r\n\t// mess with the opponent\r\n\ttaunt: 2, disable: 2, encore: 3,\r\n\r\n\t// healing moves\r\n\t// TODO: should healing moves be more common on bulkier pokemon?\r\n\t// 25%\r\n\tjunglehealing: 3, lifedew: 3,\r\n\t// 50%\r\n\tmilkdrink: 5, moonlight: 5, morningsun: 5, recover: 5, roost: 5,\r\n\tshoreup: 5, slackoff: 5, softboiled: 5, synthesis: 5,\r\n\t// delayed/consequence\r\n\trest: 3, // has sleeptalk potential\r\n\twish: 2,\r\n\r\n\t// requires terrain\r\n\tsteelroller: 0.1,\r\n};\r\n\r\nexport const WEIGHT_BASED_MOVES = ['heatcrash', 'heavyslam', 'lowkick', 'grassknot'];\r\nexport const TARGET_HP_BASED_MOVES = ['crushgrip', 'hardpress'];\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,gBAA4C;AAAA,EACxD,MAAM;AAAA,EACN,WAAW;AACZ;AAGO,MAAM,uBAA0E;AAAA,EACtF,SAAS,EAAC,UAAU,KAAK,WAAW,EAAC;AAAA,EACrC,UAAU,EAAC,WAAW,EAAC;AACxB;AAEO,MAAM,4BAA+E;AAAA,EAC3F,UAAU,EAAC,MAAM,KAAI;AAAA,EACrB,YAAY,EAAC,QAAQ,IAAG;AAAA,EACxB,WAAW,EAAC,OAAO,KAAI;AAAA,EACvB,aAAa,EAAC,OAAO,IAAG;AAAA,EACxB,cAAc,EAAC,OAAO,IAAG;AAAA,EACzB,YAAY,EAAC,UAAU,IAAG;AAAA;AAAA,EAG1B,UAAU,EAAC,QAAQ,MAAM,IAAG;AAAA,EAC5B,aAAa,EAAC,QAAQ,MAAM,IAAG;AAAA,EAC/B,UAAU,EAAC,QAAQ,MAAM,IAAG;AAAA,EAC5B,WAAW,EAAC,QAAQ,IAAG;AAAA;AAAA,EAGvB,SAAS,EAAC,OAAO,KAAK,MAAM,IAAG;AAAA,EAC/B,SAAS,EAAC,MAAM,KAAK,OAAO,IAAG;AAChC;AAGO,MAAM,yBAAqD;AAAA;AAAA,EAEjE,OAAO;AAAA;AAAA,EAEP,YAAY;AAAA,EAAK,YAAY;AAAA;AAAA,EAE7B,OAAO;AAAA;AAAA,EAGP,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,iBAAiB;AAAA,EACjB,aAAa;AAAA;AAAA,EAGb,aAAa;AAAA,EAAG,SAAS;AAAA,EAAG,YAAY;AAAA;AAAA,EACxC,UAAU;AAAA;AAAA,EAGV,OAAO;AAAA,EAAG,SAAS;AAAA,EAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,EAK9B,eAAe;AAAA,EAAG,SAAS;AAAA;AAAA,EAE3B,WAAW;AAAA,EAAG,WAAW;AAAA,EAAG,YAAY;AAAA,EAAG,SAAS;AAAA,EAAG,OAAO;AAAA,EAC9D,SAAS;AAAA,EAAG,UAAU;AAAA,EAAG,YAAY;AAAA,EAAG,WAAW;AAAA;AAAA,EAEnD,MAAM;AAAA;AAAA,EACN,MAAM;AAAA;AAAA,EAGN,aAAa;AACd;AAEO,MAAM,qBAAqB,CAAC,aAAa,aAAa,WAAW,WAAW;AAC5E,MAAM,wBAAwB,CAAC,aAAa,WAAW;",
  "names": []
}
