{
  "version": 3,
  "sources": ["../../../../../data/mods/thecardgame/moves.ts"],
  "sourcesContent": ["export const Moves: {[k: string]: ModdedMoveData} = {\r\n\tcamouflage: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\tlet newType = 'Normal';\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tnewType = 'Electric';\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tnewType = 'Grass';\r\n\t\t\t} else if (this.field.isTerrain(['mistyterrain', 'psychicterrain'])) {\r\n\t\t\t\tnewType = 'Psychic';\r\n\t\t\t}\r\n\r\n\t\t\tif (target.getTypes().join() === newType || !target.setType(newType)) return false;\r\n\t\t\tthis.add('-start', target, 'typechange', newType);\r\n\t\t},\r\n\t},\r\n\tflyingpress: {\r\n\t\tinherit: true,\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\treturn typeMod + this.dex.getEffectiveness('Normal', type);\r\n\t\t},\r\n\t},\r\n\tivycudgel: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.species.name) {\r\n\t\t\tcase 'Ogerpon-Wellspring': case 'Ogerpon-Wellspring-Tera':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Hearthflame': case 'Ogerpon-Hearthflame-Tera':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Ogerpon-Cornerstone': case 'Ogerpon-Cornerstone-Tera':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\troost: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonResidualOrder: 25,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tif (!target.terastallized) {\r\n\t\t\t\t\tthis.add('-singleturn', target, 'move: Roost');\r\n\t\t\t\t} else if (target.terastallized === \"Normal\") {\r\n\t\t\t\t\tthis.add('-hint', \"If a Normal Terastallized Pokemon uses Roost, it remains Normal-type.\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTypePriority: -1,\r\n\t\t\tonType(types, pokemon) {\r\n\t\t\t\tthis.effectState.typeWas = types;\r\n\t\t\t\treturn types.filter(type => type !== 'Normal');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tterrainpulse: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tif (!pokemon.isGrounded()) return;\r\n\t\t\tswitch (this.field.terrain) {\r\n\t\t\tcase 'electricterrain':\r\n\t\t\t\tmove.type = 'Electric';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grassyterrain':\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mistyterrain':\r\n\t\t\tcase 'psychicterrain':\r\n\t\t\t\tmove.type = 'Psychic';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tthousandarrows: {\r\n\t\tinherit: true,\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (move.type !== 'Fighting') return;\r\n\t\t\tif (!target) return; // avoid crashing when called from a chat plugin\r\n\t\t\t// ignore effectiveness if the target is Flying type and immune to Ground\r\n\t\t\tif (!target.runImmunity('Fighting')) {\r\n\t\t\t\tif (target.hasType('Normal')) return 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tignoreImmunity: {'Fighting': true},\r\n\t},\r\n\ttrickortreat: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\tif (target.hasType('Psychic')) return false;\r\n\t\t\tif (!target.addType('Psychic')) return false;\r\n\t\t\tthis.add('-start', target, 'typeadd', 'Psychic', '[from] move: Trick-or-Treat');\r\n\r\n\t\t\tif (target.side.active.length === 2 && target.position === 1) {\r\n\t\t\t\t// Curse Glitch\r\n\t\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\t\tif (action && action.move.id === 'curse') {\r\n\t\t\t\t\taction.targetLoc = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tweatherball: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tmove.type = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmove.type = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmove.type = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
