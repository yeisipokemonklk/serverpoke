{
  "version": 3,
  "sources": ["../../../../../data/mods/gen8linked/moves.ts"],
  "sourcesContent": ["export const Moves: {[k: string]: ModdedMoveData} = {\r\n\tpursuit: {\r\n\t\tinherit: true,\r\n\t\tbeforeTurnCallback(pokemon, target) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst linkedMoves: [string, string] = pokemon.getLinkedMoves();\r\n\t\t\tif (linkedMoves.length) {\r\n\t\t\t\tif (linkedMoves[0] !== 'pursuit' && linkedMoves[1] === 'pursuit') return;\r\n\t\t\t}\r\n\r\n\t\t\ttarget.side.addSideCondition('pursuit', pokemon);\r\n\t\t\tif (!target.side.sideConditions['pursuit'].sources) {\r\n\t\t\t\ttarget.side.sideConditions['pursuit'].sources = [];\r\n\t\t\t}\r\n\t\t\ttarget.side.sideConditions['pursuit'].sources.push(pokemon);\r\n\t\t},\r\n\t},\r\n\tmefirst: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\tif (action) {\r\n\t\t\t\t// Mod-specific: Me First copies the first move in the link\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst move = this.dex.getActiveMove(action.linked?.[0] || action.move);\r\n\t\t\t\tif (move.category !== 'Status' && !move.flags['failmefirst']) {\r\n\t\t\t\t\tpokemon.addVolatile('mefirst');\r\n\t\t\t\t\tthis.actions.useMove(move, pokemon, target);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\r\n\t// Modify Sucker Punch to check if both moves in a link are status\r\n\tsuckerpunch: {\r\n\t\tinherit: true,\r\n\t\tonTry(source, target) {\r\n\t\t\tconst action = this.queue.willMove(target);\r\n\t\t\tif (!action || action.choice !== 'move') {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (target.volatiles.mustrecharge && target.volatiles.mustrecharge.duration < 2) {\r\n\t\t\t\t// Duration may not be lower than 2 if Sucker Punch is used as a low-priority move\r\n\t\t\t\t// i.e. if Sucker Punch is linked with a negative priority move\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (!action.linked) {\r\n\t\t\t\tif (action.move.category === 'Status' && action.move.id !== 'mefirst') {\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tfor (const linkedMove of action.linked) {\r\n\t\t\t\t\tif (linkedMove.category !== 'Status' || linkedMove.id === 'mefirst') return;\r\n\t\t\t\t}\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', source);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Copy the last used move of a link\r\n\tsketch: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tconst disallowedMoves = ['chatter', 'sketch', 'struggle'];\r\n\t\t\tconst lastMove: Move = target.m.lastMoveAbsolute;\r\n\t\t\tif (source.transformed || !lastMove || disallowedMoves.includes(lastMove.id) ||\r\n\t\t\t\tsource.moves.includes(lastMove.id) || lastMove.isZ) return false;\r\n\t\t\tconst sketchIndex = source.moves.indexOf('sketch');\r\n\t\t\tif (sketchIndex < 0) return false;\r\n\t\t\tconst move = this.dex.moves.get(lastMove);\r\n\t\t\tconst sketchedMove = {\r\n\t\t\t\tmove: move.name,\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tpp: move.pp,\r\n\t\t\t\tmaxpp: move.pp,\r\n\t\t\t\ttarget: move.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t};\r\n\t\t\tsource.moveSlots[sketchIndex] = sketchedMove;\r\n\t\t\tsource.baseMoveSlots[sketchIndex] = sketchedMove;\r\n\t\t\tthis.add('-activate', source, 'move: Sketch', move.name);\r\n\t\t},\r\n\t},\r\n\tmimic: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tconst lastMove: Move = target.m.lastMoveAbsolute;\r\n\t\t\tif (source.transformed || !lastMove || lastMove.flags['failmimic'] ||\r\n\t\t\t\tsource.moves.includes(lastMove.id) || lastMove.isZ) return false;\r\n\t\t\tconst mimicIndex = source.moves.indexOf('mimic');\r\n\t\t\tif (mimicIndex < 0) return false;\r\n\t\t\tconst move = this.dex.moves.get(lastMove);\r\n\t\t\tsource.moveSlots[mimicIndex] = {\r\n\t\t\t\tmove: move.name,\r\n\t\t\t\tid: move.id,\r\n\t\t\t\tpp: move.pp,\r\n\t\t\t\tmaxpp: move.pp,\r\n\t\t\t\ttarget: move.target,\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tused: false,\r\n\t\t\t\tvirtual: true,\r\n\t\t\t};\r\n\t\t\tthis.add('-start', source, 'Mimic', move.name);\r\n\t\t},\r\n\t},\r\n\r\n\t// Copy/call last move of a link\r\n\tinstruct: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tconst lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\tif (!lastMove || target.volatiles['dynamax']) return false;\r\n\t\t\tconst moveIndex = target.moves.indexOf(lastMove.id);\r\n\t\t\tif (\r\n\t\t\t\tlastMove.flags['failinstruct'] || lastMove.isZ || lastMove.isMax ||\r\n\t\t\t\tlastMove.flags['charge'] || lastMove.flags['recharge'] ||\r\n\t\t\t\ttarget.volatiles['beakblast'] || target.volatiles['focuspunch'] || target.volatiles['shelltrap'] ||\r\n\t\t\t\t(target.moveSlots[moveIndex] && target.moveSlots[moveIndex].pp <= 0)\r\n\t\t\t) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.add('-singleturn', target, 'move: Instruct', '[of] ' + source);\r\n\t\t\tthis.actions.runMove(lastMove.id, target, target.lastMoveTargetLoc!);\r\n\t\t},\r\n\t},\r\n\tmirrormove: {\r\n\t\tinherit: true,\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tconst move: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\tif (!move || !move.flags['mirror'] || move.isZ || move.isMax) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(move.id, pokemon, target);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\r\n\t// Disabling effects\r\n\tdisable: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tnoCopy: true, // doesn't get copied by Baton Pass\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tconst lastMove: Move | ActiveMove | null = pokemon.m.lastMoveAbsolute;\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.queue.willMove(pokemon) ||\r\n\t\t\t\t\t(pokemon === this.activePokemon && this.activeMove && !this.activeMove.isExternal)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.effectState.duration--;\r\n\t\t\t\t}\r\n\t\t\t\tif (!lastMove) {\r\n\t\t\t\t\tthis.debug('pokemon hasn\\'t moved yet');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === lastMove.id) {\r\n\t\t\t\t\t\tif (!moveSlot.pp) {\r\n\t\t\t\t\t\t\tthis.debug('Move out of PP');\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (effect.id === 'cursedbody') {\r\n\t\t\t\t\t\t\t\tthis.add('-start', pokemon, 'Disable', moveSlot.move, '[from] ability: Cursed Body', '[of] ' + source);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.add('-start', pokemon, 'Disable', moveSlot.move);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.effectState.move = lastMove.id;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 14,\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Disable');\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 7,\r\n\t\t\tonBeforeMove(attacker, defender, move) {\r\n\t\t\t\tif (!move.isZ && move.id === this.effectState.move) {\r\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tencore: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 3,\r\n\t\t\tnoCopy: true, // doesn't get copied by Z-Baton Pass\r\n\t\t\tonStart(target) {\r\n\t\t\t\tlet lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\t\tif (!lastMove || target.volatiles['dynamax']) return false;\r\n\t\t\t\tif ((lastMove as ActiveMove).isZOrMaxPowered) lastMove = this.dex.moves.get(lastMove.baseMove);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst linkedMoves: [string, string] = target.getLinkedMoves(true);\r\n\t\t\t\tconst moveIndex = target.moves.indexOf(lastMove.id);\r\n\t\t\t\tif (linkedMoves.includes(lastMove.id) && this.dex.moves.get((linkedMoves[0])).flags['failencore'] &&\r\n\t\t\t\t\tthis.dex.moves.get((linkedMoves[1])).flags['failencore']) {\r\n\t\t\t\t\t// both moves cannot be encored\r\n\t\t\t\t\tdelete target.volatiles['encore'];\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (lastMove.isZ || lastMove.flags['failencore'] ||\r\n\t\t\t\t\t(target.moveSlots[moveIndex] && target.moveSlots[moveIndex].pp <= 0)) {\r\n\t\t\t\t\t// it failed\r\n\t\t\t\t\tdelete target.volatiles['encore'];\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.turnsActivated = {};\r\n\t\t\t\tthis.effectState.move = lastMove.id;\r\n\t\t\t\tthis.add('-start', target, 'Encore');\r\n\t\t\t\tif (linkedMoves.includes(lastMove.id)) {\r\n\t\t\t\t\tthis.effectState.move = linkedMoves;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.queue.willMove(target)) {\r\n\t\t\t\t\tthis.effectState.duration++;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonOverrideAction(pokemon, target, move) {\r\n\t\t\t\tif (!this.effectState.turnsActivated[this.turn]) {\r\n\t\t\t\t\t// Initialize Encore effect for this turn\r\n\t\t\t\t\tthis.effectState.turnsActivated[this.turn] = 0;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tthis.effectState.turnsActivated[this.turn] >= (Array.isArray(this.effectState.move) ?\r\n\t\t\t\t\t\tthis.effectState.move.length : 1)) {\r\n\t\t\t\t\t// Finish Encore effect for this turn\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.turnsActivated[this.turn]++;\r\n\t\t\t\tif (!Array.isArray(this.effectState.move)) {\r\n\t\t\t\t\tthis.queue.cancelAction(pokemon);\r\n\t\t\t\t\tif (move.id !== this.effectState.move) return this.effectState.move;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Locked into a link\r\n\t\t\t\tswitch (this.effectState.turnsActivated[this.turn]) {\r\n\t\t\t\tcase 1: {\r\n\t\t\t\t\tif (this.effectState.move[0] !== move.id) return this.effectState.move[0];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tif (this.effectState.move[1] !== move.id) return this.effectState.move[1];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 13,\r\n\t\t\tonResidual(target) {\r\n\t\t\t\t// early termination if you run out of PP\r\n\t\t\t\tconst lastMove = target.m.lastMoveAbsolute;\r\n\t\t\t\tconst index = target.moves.indexOf(lastMove.id);\r\n\t\t\t\tif (index === -1) return; // no last move\r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (target.hasLinkedMove(lastMove.id)) {\r\n\t\t\t\t\t// TODO: Check instead whether the last executed move was linked\r\n\t\t\t\t\tif (target.moveSlots[0].pp <= 0 || target.moveSlots[1].pp <= 0) {\r\n\t\t\t\t\t\tdelete target.volatiles.encore;\r\n\t\t\t\t\t\tthis.add('-end', target, 'Encore');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (target.moveSlots[index].pp <= 0) {\r\n\t\t\t\t\t\tdelete target.volatiles.encore;\r\n\t\t\t\t\t\tthis.add('-end', target, 'Encore');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'Encore');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (Array.isArray(this.effectState.move)) {\r\n\t\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\t\tif (moveSlot.id !== this.effectState.move[0] && moveSlot.id !== this.effectState.move[1]) {\r\n\t\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.effectState.move || !pokemon.hasMove(this.effectState.move)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (moveSlot.id !== this.effectState.move) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ttorment: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tif (pokemon.volatiles['dynamax']) {\r\n\t\t\t\t\tdelete pokemon.volatiles['torment'];\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-start', pokemon, 'Torment');\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Torment');\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tconst lastMove = pokemon.lastMove;\r\n\t\t\t\tif (!lastMove || lastMove.id === 'struggle') return;\r\n\r\n\t\t\t\tif (Array.isArray(lastMove)) {\r\n\t\t\t\t\tfor (const move of lastMove) {\r\n\t\t\t\t\t\tpokemon.disableMove(move.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpokemon.disableMove(lastMove.id);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t// PP-decreasing moves\r\n\tgrudge: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singlemove', pokemon, 'Grudge');\r\n\t\t\t},\r\n\t\t\tonFaint(target, source, effect) {\r\n\t\t\t\tif (!source || source.fainted || !effect) return;\r\n\t\t\t\tconst lastMove: Move | ActiveMove | null = source.m.lastMoveAbsolute;\r\n\t\t\t\tif (effect.effectType === 'Move' && !effect.flags['futuremove'] && lastMove) {\r\n\t\t\t\t\tfor (const moveSlot of source.moveSlots) {\r\n\t\t\t\t\t\tif (moveSlot.id === lastMove.id) {\r\n\t\t\t\t\t\t\tmoveSlot.pp = 0;\r\n\t\t\t\t\t\t\tthis.add('-activate', source, 'move: Grudge', this.dex.moves.get(lastMove.id).name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 100,\r\n\t\t\tonBeforeMove(pokemon) {\r\n\t\t\t\tif (pokemon.moveThisTurn) return; // Second stage of a Linked move\r\n\t\t\t\tthis.debug('removing Grudge before attack');\r\n\t\t\t\tpokemon.removeVolatile('grudge');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tspite: {\r\n\t\tinherit: true,\r\n\t\tonHit(target) {\r\n\t\t\tconst lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\tif (!lastMove || lastMove.isZ || lastMove.isMax) return false;\r\n\t\t\tconst ppDeducted = target.deductPP(lastMove.id, 4);\r\n\t\t\tif (!ppDeducted) return false;\r\n\t\t\tthis.add(\"-activate\", target, 'move: Spite', lastMove.name, ppDeducted);\r\n\t\t},\r\n\t},\r\n\r\n\t// Other lastMove checks\r\n\tconversion2: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source) {\r\n\t\t\tconst lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\tif (!lastMove) return false;\r\n\t\t\tconst possibleTypes = [];\r\n\t\t\tconst attackType = lastMove.type;\r\n\t\t\tfor (const type in this.dex.data.TypeChart) {\r\n\t\t\t\tif (source.hasType(type)) continue;\r\n\t\t\t\tconst typeCheck = this.dex.data.TypeChart[type].damageTaken[attackType];\r\n\t\t\t\tif (typeCheck === 2 || typeCheck === 3) {\r\n\t\t\t\t\tpossibleTypes.push(type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!possibleTypes.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst randomType = this.sample(possibleTypes);\r\n\r\n\t\t\tif (!source.setType(randomType)) return false;\r\n\t\t\tthis.add('-start', source, 'typechange', randomType);\r\n\t\t},\r\n\t},\r\n\tdestinybond: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-singlemove', pokemon, 'Destiny Bond');\r\n\t\t\t},\r\n\t\t\tonFaint(target, source, effect) {\r\n\t\t\t\tif (!source || !effect || target.side === source.side) return;\r\n\t\t\t\tif (effect.effectType === 'Move' && !effect.flags['futuremove']) {\r\n\t\t\t\t\tif (source.volatiles['dynamax']) {\r\n\t\t\t\t\t\tthis.add('-hint', \"Dynamaxed Pok\u00E9mon are immune to Destiny Bond.\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Destiny Bond');\r\n\t\t\t\t\tsource.faint();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: -1,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\t// Second stage of a Linked move does not remove Destiny Bond\r\n\t\t\t\tif (pokemon.moveThisTurn || move.id === 'destinybond') return;\r\n\t\t\t\tthis.debug('removing Destiny Bond before attack');\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t},\r\n\t\t\tonMoveAborted(pokemon, target, move) {\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\ticeball: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonLockMove: 'iceball',\r\n\t\t\tonStart() {\r\n\t\t\t\tthis.effectState.hitCount = 0;\r\n\t\t\t},\r\n\t\t\tonResidual(target) {\r\n\t\t\t\t// This is just to ensure the volatile is deleted correctly\r\n\t\t\t\tconst lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\t\tif (lastMove?.id === 'struggle') {\r\n\t\t\t\t\tdelete target.volatiles['iceball'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\trollout: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonLockMove: 'rollout',\r\n\t\t\tonStart() {\r\n\t\t\t\tthis.effectState.hitCount = 0;\r\n\t\t\t},\r\n\t\t\tonResidual(target) {\r\n\t\t\t\t// This is just to ensure the volatile is deleted correctly\r\n\t\t\t\tconst lastMove: Move | ActiveMove | null = target.m.lastMoveAbsolute;\r\n\t\t\t\tif (lastMove?.id === 'struggle') {\r\n\t\t\t\t\tdelete target.volatiles['rollout'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
