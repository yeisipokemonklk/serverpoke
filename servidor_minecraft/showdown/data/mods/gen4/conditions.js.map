{
  "version": 3,
  "sources": ["../../../../../data/mods/gen4/conditions.ts"],
  "sourcesContent": ["export const Conditions: {[k: string]: ModdedConditionData} = {\r\n\tbrn: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidualSubOrder: 6,\r\n\t},\r\n\tpar: {\r\n\t\tinherit: true,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (!pokemon.hasAbility('quickfeet')) {\r\n\t\t\t\treturn this.chainModify(0.25);\r\n\t\t\t}\r\n\t\t\treturn spe;\r\n\t\t},\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (!pokemon.hasAbility('magicguard') && this.randomChance(1, 4)) {\r\n\t\t\t\tthis.add('cant', pokemon, 'par');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tslp: {\r\n\t\tname: 'slp',\r\n\t\teffectType: 'Status',\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect && sourceEffect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-status', target, 'slp', '[from] move: ' + sourceEffect.name);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-status', target, 'slp');\r\n\t\t\t}\r\n\t\t\t// 1-4 turns\r\n\t\t\tthis.effectState.time = this.random(2, 6);\r\n\r\n\t\t\tif (target.removeVolatile('nightmare')) {\r\n\t\t\t\tthis.add('-end', target, 'Nightmare', '[silent]');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMovePriority: 10,\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (pokemon.hasAbility('earlybird')) {\r\n\t\t\t\tpokemon.statusState.time--;\r\n\t\t\t}\r\n\t\t\tpokemon.statusState.time--;\r\n\t\t\tif (pokemon.statusState.time <= 0) {\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('cant', pokemon, 'slp');\r\n\t\t\tif (move.sleepUsable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tpsn: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidualSubOrder: 6,\r\n\t},\r\n\ttox: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidualSubOrder: 6,\r\n\t},\r\n\tconfusion: {\r\n\t\tinherit: true,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tpokemon.volatiles['confusion'].time--;\r\n\t\t\tif (!pokemon.volatiles['confusion'].time) {\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', pokemon, 'confusion');\r\n\t\t\tif (this.randomChance(1, 2)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst damage = this.actions.getDamage(pokemon, pokemon, 40);\r\n\t\t\tif (typeof damage !== 'number') throw new Error(\"Confusion damage not dealt\");\r\n\t\t\tthis.damage(damage, pokemon, pokemon, {\r\n\t\t\t\tid: 'confused',\r\n\t\t\t\teffectType: 'Move',\r\n\t\t\t\ttype: '???',\r\n\t\t\t} as ActiveMove);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tfrz: {\r\n\t\tinherit: true,\r\n\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\tif (this.randomChance(1, 5)) {\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (move.flags['defrost']) return;\r\n\t\t\tthis.add('cant', pokemon, 'frz');\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n\tsubstitutebroken: {\r\n\t\tnoCopy: true,\r\n\t},\r\n\ttrapped: {\r\n\t\tinherit: true,\r\n\t\tnoCopy: false,\r\n\t},\r\n\ttrapper: {\r\n\t\tinherit: true,\r\n\t\tnoCopy: false,\r\n\t},\r\n\tpartiallytrapped: {\r\n\t\tinherit: true,\r\n\t\tdurationCallback(target, source) {\r\n\t\t\tif (source.hasItem('gripclaw')) return 6;\r\n\t\t\treturn this.random(3, 7);\r\n\t\t},\r\n\t\tonResidualOrder: 10,\r\n\t\tonResidualSubOrder: 9,\r\n\t},\r\n\tchoicelock: {\r\n\t\tinherit: true,\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.lastMove) return false;\r\n\t\t\tthis.effectState.move = pokemon.lastMove.id;\r\n\t\t},\r\n\t},\r\n\tfuturemove: {\r\n\t\tinherit: true,\r\n\t\tonResidualOrder: 11,\r\n\t},\r\n\tstall: {\r\n\t\t// In gen 3-4, the chance of protect succeeding does not fall below 1/8.\r\n\t\t// See http://upokecenter.dreamhosters.com/dex/?lang=en&move=182\r\n\t\tinherit: true,\r\n\t\tcounterMax: 8,\r\n\t},\r\n\traindance: {\r\n\t\tinherit: true,\r\n\t\tonFieldResidualOrder: 8,\r\n\t},\r\n\tsunnyday: {\r\n\t\tinherit: true,\r\n\t\tonFieldResidualOrder: 8,\r\n\t},\r\n\tsandstorm: {\r\n\t\tinherit: true,\r\n\t\tonFieldResidualOrder: 8,\r\n\t},\r\n\thail: {\r\n\t\tinherit: true,\r\n\t\tonFieldResidualOrder: 8,\r\n\t},\r\n\t// Arceus's true typing for all its formes is Normal, and it's only Multitype\r\n\t// that changes its type, but its formes are specified to be their corresponding\r\n\t// type in the Pokedex, so that needs to be overridden. Without Multitype it\r\n\t// starts as Normal type, but its type can be changed by other effects.\r\n\t// This is mainly relevant for Hackmons Cup and Balanced Hackmons.\r\n\tarceus: {\r\n\t\tname: 'Arceus',\r\n\t\tonBeforeSwitchIn(pokemon) {\r\n\t\t\tpokemon.setType('Normal'); // Multitype will prevent this\r\n\t\t},\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tif (pokemon.ability === 'multitype') {\r\n\t\t\t\tconst item = pokemon.getItem();\r\n\t\t\t\tconst targetForme = (item?.onPlate ? 'Arceus-' + item.onPlate : 'Arceus');\r\n\t\t\t\tif (pokemon.species.name !== targetForme) {\r\n\t\t\t\t\tpokemon.formeChange(targetForme);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
